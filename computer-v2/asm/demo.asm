####################################################################################################
##             Source code for the "Demo" program for a computer made of logic arrows             ##
##              Исходный код программы "Demo" для компьютера из логических стрелочек              ##
##                  https://github.com/chubrik/LogicArrows/tree/main/computer-v2                  ##
##                          (с) 2025 Arkadi Chubrik (arkadi@chubrik.org)                          ##
####################################################################################################


TERMINAL        equ 0x3C                ; Константа с адресом для вывода текста в терминал
JS_C            equ 0x19                ; Константа с кодом инструкции "js c"

                jmp init                ; Переходим через область данных

; Верхняя часть изображения для вывода в терминал
img1        db  0b00000000,             ;                  ;
                0b00000000,             ;                  ;
                0b10000000,             ; ██               ;
                0b01100000,             ;   ████           ;
                0b00010000,             ;       ██         ;
                0b00101000,             ;     ██  ██       ;
                0b00000100,             ;           ██     ;
                0b10000100,             ; ██        ██     ;
                0b00010100,             ;       ██  ██     ;
                0b00000100,             ;           ██     ;
                0b01001000,             ;   ██    ██       ;
                0b00010000,             ;       ██         ;
                0b01100000,             ;   ████           ;
                0b10000000,             ; ██               ;
                0b00000000,             ;                  ;
                0b00000000,             ;                  ;
                0b00000000              ;                  ;

img1_last   equ $ -1

; Подготавливаем вывод нижней половинки изображения
img2_show:      ldi a, JS_C
                st a, img_cond          ; Заменяем условие для выхода из цикла "img_loop"
                ldi b, img2_last        ; Указатель на последний байт изображения. В течение цикла
                                        ;   указатель смещается к первому байту и одновременно
                                        ;   работает как счётчик, по которому цикл завершается.
                jmp img_show

; Подготавливаем вывод верхней половинки изображения
img1_show:      ldi b, img1_last        ; Указатель на последний байт изображения. В течение цикла
                                        ;   указатель смещается к первому байту и одновременно
                                        ;   работает как счётчик, по которому цикл завершается.

img_show:       ldi c, img_loop         ; Запоминаем адрес начала итерации для ускорения цикла
                inc d                   ; Меняем адрес вывода в терминал для графического режима

; Выводим часть изображения в терминал при помощи цикла
img_loop:       ld a, b
                st a, d
                dec b
img_cond:       jnz c                   ; Заменяемое условие для выхода из цикла

img_jmp:        jmp text2_show          ; Заменяемый адрес для перехода

; Выводим часть текста в терминал при помощи цикла
text_loop:      ld a, b
                st a, d
                inc b
                dec c
                jnz text_loop

text_jmp:       jmp img1_show           ; Заменяемый адрес для перехода

; Выводим в терминал оставшийся текст
end:            ldi a, "\n"
                st a, d
                ldi a, ">"
                st a, d

; Звоним в колокольчик
                ldi a, "\a"             ; Код команды "звонок" у терминала
                st a, d                 ; Активируем звонок, у терминала загорается колокольчик
                st a, d                 ; Снова активируем звонок, но в этот раз колокольчик гаснет.
                                        ;   Терминал устроен так, что колокольчик гаснет при любом
                                        ;   дальнейшем вводе, в т.ч. повторном "\a".
                st a, d
                st a, d
                st a, d                 ; Зажигаем колокольчик в третий раз и оставляем

; Завершаем выполнение программы
                hlt

void        db  0, 0                    ; Текущие адреса подключены к выводу в терминал

out         db  0b00110001              ; Порт вывода, подключаем цветной дисплей и терминал
bank        db  0                       ; Порт банка памяти (не используется)

; Область 0x40...0x5F содержит красный компонент заставки, отображаемой на дисплее во время загрузки
; программы
display_r   db  0b00000000, 0b00000000, ;                                  ;
                0b00000000, 0b00000000, ;                                  ;
                0b00000000, 0b00000000, ;                                  ;
                0b00000010, 0b10000000, ;             ██  ██               ;
                0b00111011, 0b10111000, ;     ██████  ██████  ██████       ;
                0b00100101, 0b01111000, ;     ██    ██  ██  ████████       ;
                0b00100011, 0b11111000, ;     ██      ██████████████       ;
                0b00100001, 0b11111000, ;     ██        ████████████       ;
                0b00010001, 0b11110000, ;       ██      ██████████         ;
                0b00001101, 0b11100000, ;         ████  ████████           ;
                0b00010001, 0b11110000, ;       ██      ██████████         ;
                0b00010011, 0b11110000, ;       ██    ████████████         ;
                0b00001101, 0b01100000, ;         ████  ██  ████           ;
                0b00000000, 0b00000000, ;                                  ;
                0b00000000, 0b00000000, ;                                  ;
                0b00000000, 0b00000000  ;                                  ;

; Область 0x60...0x7F содержит синий компонент заставки, отображаемой на дисплее во время загрузки
; программы
display_b   db  0b00000000, 0b00000000, ;                                  ;
                0b00000000, 0b00000000, ;                                  ;
                0b00000000, 0b00000000, ;                                  ;
                0b00000010, 0b10000000, ;             ██  ██               ;
                0b00111011, 0b10111000, ;     ██████  ██████  ██████       ;
                0b00111101, 0b01001000, ;     ████████  ██  ██    ██       ;
                0b00111111, 0b10001000, ;     ██████████████      ██       ;
                0b00111111, 0b00001000, ;     ████████████        ██       ;
                0b00011111, 0b00010000, ;       ██████████      ██         ;
                0b00001111, 0b01100000, ;         ████████  ████           ;
                0b00011111, 0b00010000, ;       ██████████      ██         ;
                0b00011111, 0b10010000, ;       ████████████    ██         ;
                0b00001101, 0b01100000, ;         ████  ██  ████           ;
                0b00000000, 0b00000000, ;                                  ;
                0b00000000, 0b00000000, ;                                  ;
                0b00000000, 0b00000000  ;                                  ;

; Нижняя часть изображения для вывода в терминал
img2        db  0b00000000,             ;                  ;
                0b00000000,             ;                  ;
                0b00011110,             ;       ████████   ;
                0b00100001,             ;     ██        ██ ;
                0b00100010,             ;     ██      ██   ;
                0b01000000,             ;   ██             ;
                0b01111000,             ;   ████████       ;
                0b01111100,             ;   ██████████     ;
                0b01111100,             ;   ██████████     ;
                0b01111100,             ;   ██████████     ;
                0b01111100,             ;   ██████████     ;
                0b01111000,             ;   ████████       ;
                0b01000000,             ;   ██             ;
                0b00100100,             ;     ██    ██     ;
                0b00100001,             ;     ██        ██ ;
                0b00011110,             ;       ████████   ;
                0b00000000,             ;                  ;
                0b00000000              ;                  ;

img2_last   equ $ -1

; Инициализация программы
init:           inc b
                st a, b                 ; Очищаем адрес 0x01, тем самым дополняем изображение
                ldi d, TERMINAL

; Подготавливаем вывод первой строки текста
text1_show:     ldi b, text1
                ldi c, text1_size

                jmp text_loop           ; Переходим к выводу первой строки

; Подготавливаем вывод второй строки текста
text2_show:     ldi a, img2_show
                st a, text_jmp +1       ; Заменяем адрес для перехода после вывода текста
                ldi a, pre_end
                st a, img_jmp +1        ; Заменяем адрес для перехода после вывода изображения
                ldi b, text2
                ldi c, text2_size
                dec d                   ; Меняем адрес вывода в терминал для текстового режима
                jmp text_loop

pre_end:        dec d                   ; Меняем адрес вывода в терминал для текстового режима
                jmp end                 ; Переходим к выводу оставшегося текста

; Первая строка текста для вывода в терминал
text1       db  "Привет,  "
text1_size  equ $ - text1

; Вторая строка текста для вывода в терминал
text2       db  "Онигири! "
text2_size  equ $ - text2
